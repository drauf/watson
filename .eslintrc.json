{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint"
  ],
  "extends": [
    "airbnb-typescript",
    "airbnb/hooks",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "rules": {
    "max-len": "off",
    // Switch non-trivial errors to warnings
    "import/no-cycle": [
      "warn"
    ],
    "no-param-reassign": [
      "warn"
    ],
    // Fix "X is already declared in the upper scope" for TS enums
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    // suppress errors for missing 'import React' in files
    "react/react-in-jsx-scope": "off",
    // Diff to airbnb: Allow use of forâ€¦in loops
    "no-restricted-syntax": [
      "error",
      "ForInStatement",
      "LabeledStatement",
      "WithStatement"
    ],
    // Allow using either nesting or id for mapping labels to controls
    "jsx-a11y/label-has-associated-control": [
      "error",
      {
        "required": {
          "some": [
            "nesting",
            "id"
          ]
        }
      }
    ],
    // Turn some a11y issues from errors to warnings
    "jsx-a11y/click-events-have-key-events": [
      "warn"
    ],
    "jsx-a11y/no-noninteractive-element-interactions": [
      "warn"
    ],
    // Use TS types instead of PropTypes
    "react/prop-types": "off",
    // Fix "React was used before it was defined" error
    "no-use-before-define": "off",
    // Allow ++ operator
    "no-plusplus": "off",
    // Allow printing errors and warnings to the console
    "no-console": [
      "error",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    // Make .tsx files work properly
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "tsx": "never"
      }
    ],
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".tsx"
        ]
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    }
  }
}
